package com.example.huiyiqiandaotv.beans;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BAO_CUN_BEAN".
*/
public class BaoCunBeanDao extends AbstractDao<BaoCunBean, Long> {

    public static final String TABLENAME = "BAO_CUN_BEAN";

    /**
     * Properties of entity BaoCunBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property ShipingIP = new Property(1, String.class, "shipingIP", false, "SHIPING_IP");
        public final static Property ZhujiDiZhi = new Property(2, String.class, "zhujiDiZhi", false, "ZHUJI_DI_ZHI");
        public final static Property Moban = new Property(3, int.class, "moban", false, "MOBAN");
        public final static Property TuisongDiZhi = new Property(4, String.class, "tuisongDiZhi", false, "TUISONG_DI_ZHI");
        public final static Property Gonggao = new Property(5, String.class, "gonggao", false, "GONGGAO");
        public final static Property IsShowMoshengren = new Property(6, boolean.class, "isShowMoshengren", false, "IS_SHOW_MOSHENGREN");
        public final static Property IsShowShiPingLiu = new Property(7, boolean.class, "isShowShiPingLiu", false, "IS_SHOW_SHI_PING_LIU");
        public final static Property IsHengOrShu = new Property(8, boolean.class, "isHengOrShu", false, "IS_HENG_OR_SHU");
        public final static Property Yusu = new Property(9, int.class, "yusu", false, "YUSU");
        public final static Property Yudiao = new Property(10, int.class, "yudiao", false, "YUDIAO");
        public final static Property Boyingren = new Property(11, int.class, "boyingren", false, "BOYINGREN");
        public final static Property ZhanghuId = new Property(12, String.class, "zhanghuId", false, "ZHANGHU_ID");
        public final static Property Wenzi = new Property(13, String.class, "wenzi", false, "WENZI");
        public final static Property Size = new Property(14, int.class, "size", false, "SIZE");
        public final static Property Touxiangzhuji = new Property(15, String.class, "touxiangzhuji", false, "TOUXIANGZHUJI");
        public final static Property HoutaiDiZhi = new Property(16, String.class, "houtaiDiZhi", false, "HOUTAI_DI_ZHI");
        public final static Property HuiyiId = new Property(17, String.class, "huiyiId", false, "HUIYI_ID");
    }


    public BaoCunBeanDao(DaoConfig config) {
        super(config);
    }
    
    public BaoCunBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"BAO_CUN_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 0: id
                "\"SHIPING_IP\" TEXT," + // 1: shipingIP
                "\"ZHUJI_DI_ZHI\" TEXT," + // 2: zhujiDiZhi
                "\"MOBAN\" INTEGER NOT NULL ," + // 3: moban
                "\"TUISONG_DI_ZHI\" TEXT," + // 4: tuisongDiZhi
                "\"GONGGAO\" TEXT," + // 5: gonggao
                "\"IS_SHOW_MOSHENGREN\" INTEGER NOT NULL ," + // 6: isShowMoshengren
                "\"IS_SHOW_SHI_PING_LIU\" INTEGER NOT NULL ," + // 7: isShowShiPingLiu
                "\"IS_HENG_OR_SHU\" INTEGER NOT NULL ," + // 8: isHengOrShu
                "\"YUSU\" INTEGER NOT NULL ," + // 9: yusu
                "\"YUDIAO\" INTEGER NOT NULL ," + // 10: yudiao
                "\"BOYINGREN\" INTEGER NOT NULL ," + // 11: boyingren
                "\"ZHANGHU_ID\" TEXT," + // 12: zhanghuId
                "\"WENZI\" TEXT," + // 13: wenzi
                "\"SIZE\" INTEGER NOT NULL ," + // 14: size
                "\"TOUXIANGZHUJI\" TEXT," + // 15: touxiangzhuji
                "\"HOUTAI_DI_ZHI\" TEXT," + // 16: houtaiDiZhi
                "\"HUIYI_ID\" TEXT);"); // 17: huiyiId
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"BAO_CUN_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, BaoCunBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String shipingIP = entity.getShipingIP();
        if (shipingIP != null) {
            stmt.bindString(2, shipingIP);
        }
 
        String zhujiDiZhi = entity.getZhujiDiZhi();
        if (zhujiDiZhi != null) {
            stmt.bindString(3, zhujiDiZhi);
        }
        stmt.bindLong(4, entity.getMoban());
 
        String tuisongDiZhi = entity.getTuisongDiZhi();
        if (tuisongDiZhi != null) {
            stmt.bindString(5, tuisongDiZhi);
        }
 
        String gonggao = entity.getGonggao();
        if (gonggao != null) {
            stmt.bindString(6, gonggao);
        }
        stmt.bindLong(7, entity.getIsShowMoshengren() ? 1L: 0L);
        stmt.bindLong(8, entity.getIsShowShiPingLiu() ? 1L: 0L);
        stmt.bindLong(9, entity.getIsHengOrShu() ? 1L: 0L);
        stmt.bindLong(10, entity.getYusu());
        stmt.bindLong(11, entity.getYudiao());
        stmt.bindLong(12, entity.getBoyingren());
 
        String zhanghuId = entity.getZhanghuId();
        if (zhanghuId != null) {
            stmt.bindString(13, zhanghuId);
        }
 
        String wenzi = entity.getWenzi();
        if (wenzi != null) {
            stmt.bindString(14, wenzi);
        }
        stmt.bindLong(15, entity.getSize());
 
        String touxiangzhuji = entity.getTouxiangzhuji();
        if (touxiangzhuji != null) {
            stmt.bindString(16, touxiangzhuji);
        }
 
        String houtaiDiZhi = entity.getHoutaiDiZhi();
        if (houtaiDiZhi != null) {
            stmt.bindString(17, houtaiDiZhi);
        }
 
        String huiyiId = entity.getHuiyiId();
        if (huiyiId != null) {
            stmt.bindString(18, huiyiId);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, BaoCunBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String shipingIP = entity.getShipingIP();
        if (shipingIP != null) {
            stmt.bindString(2, shipingIP);
        }
 
        String zhujiDiZhi = entity.getZhujiDiZhi();
        if (zhujiDiZhi != null) {
            stmt.bindString(3, zhujiDiZhi);
        }
        stmt.bindLong(4, entity.getMoban());
 
        String tuisongDiZhi = entity.getTuisongDiZhi();
        if (tuisongDiZhi != null) {
            stmt.bindString(5, tuisongDiZhi);
        }
 
        String gonggao = entity.getGonggao();
        if (gonggao != null) {
            stmt.bindString(6, gonggao);
        }
        stmt.bindLong(7, entity.getIsShowMoshengren() ? 1L: 0L);
        stmt.bindLong(8, entity.getIsShowShiPingLiu() ? 1L: 0L);
        stmt.bindLong(9, entity.getIsHengOrShu() ? 1L: 0L);
        stmt.bindLong(10, entity.getYusu());
        stmt.bindLong(11, entity.getYudiao());
        stmt.bindLong(12, entity.getBoyingren());
 
        String zhanghuId = entity.getZhanghuId();
        if (zhanghuId != null) {
            stmt.bindString(13, zhanghuId);
        }
 
        String wenzi = entity.getWenzi();
        if (wenzi != null) {
            stmt.bindString(14, wenzi);
        }
        stmt.bindLong(15, entity.getSize());
 
        String touxiangzhuji = entity.getTouxiangzhuji();
        if (touxiangzhuji != null) {
            stmt.bindString(16, touxiangzhuji);
        }
 
        String houtaiDiZhi = entity.getHoutaiDiZhi();
        if (houtaiDiZhi != null) {
            stmt.bindString(17, houtaiDiZhi);
        }
 
        String huiyiId = entity.getHuiyiId();
        if (huiyiId != null) {
            stmt.bindString(18, huiyiId);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public BaoCunBean readEntity(Cursor cursor, int offset) {
        BaoCunBean entity = new BaoCunBean( //
            cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // shipingIP
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // zhujiDiZhi
            cursor.getInt(offset + 3), // moban
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // tuisongDiZhi
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // gonggao
            cursor.getShort(offset + 6) != 0, // isShowMoshengren
            cursor.getShort(offset + 7) != 0, // isShowShiPingLiu
            cursor.getShort(offset + 8) != 0, // isHengOrShu
            cursor.getInt(offset + 9), // yusu
            cursor.getInt(offset + 10), // yudiao
            cursor.getInt(offset + 11), // boyingren
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // zhanghuId
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // wenzi
            cursor.getInt(offset + 14), // size
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // touxiangzhuji
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // houtaiDiZhi
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17) // huiyiId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, BaoCunBean entity, int offset) {
        entity.setId(cursor.getLong(offset + 0));
        entity.setShipingIP(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setZhujiDiZhi(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMoban(cursor.getInt(offset + 3));
        entity.setTuisongDiZhi(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGonggao(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setIsShowMoshengren(cursor.getShort(offset + 6) != 0);
        entity.setIsShowShiPingLiu(cursor.getShort(offset + 7) != 0);
        entity.setIsHengOrShu(cursor.getShort(offset + 8) != 0);
        entity.setYusu(cursor.getInt(offset + 9));
        entity.setYudiao(cursor.getInt(offset + 10));
        entity.setBoyingren(cursor.getInt(offset + 11));
        entity.setZhanghuId(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setWenzi(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSize(cursor.getInt(offset + 14));
        entity.setTouxiangzhuji(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setHoutaiDiZhi(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setHuiyiId(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(BaoCunBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(BaoCunBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(BaoCunBean entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
